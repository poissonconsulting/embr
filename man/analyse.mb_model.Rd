% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyse.R
\name{analyse.mb_model}
\alias{analyse.mb_model}
\title{Analyse Single Model}
\usage{
\method{analyse}{mb_model}(
  x,
  data,
  nchains = getOption("mb.nchains", 3L),
  niters = getOption("mb.niters", 1000L),
  nthin = getOption("mb.thin", NULL),
  parallel = getOption("mb.parallel", FALSE),
  quiet = getOption("mb.quiet", TRUE),
  glance = getOption("mb.glance", TRUE),
  beep = getOption("mb.beep", TRUE),
  stan_engine = getOption("mb.stan_engine", character(0)),
  ...
)
}
\arguments{
\item{x}{An mb_model object to analyse.}

\item{data}{The data frame to analyse, or a list of data frames for multiple datasets.}

\item{nchains}{A count of the number of chains (default: 3).}

\item{niters}{A count of the number of simulations to save per chain (default: 1000).}

\item{nthin}{A count of the thinning interval.}

\item{parallel}{A flag indicating whether to perform the analysis in parallel if possible.}

\item{quiet}{A flag indicating whether to disable messages and warnings, including sampling progress.}

\item{glance}{A flag indicating whether to print a model summary.}

\item{beep}{A flag indicating whether to beep on completion of the analysis.}

\item{stan_engine}{A string specifying the Stan engine to use:
\itemize{
\item \code{"rstan"} for MCMC sampling via \code{\link[rstan:stanmodel-method-sampling]{rstan::sampling()}} (default).
\item \code{"cmdstan-mcmc"} for MCMC sampling via \code{\link[cmdstanr:model-method-sample]{cmdstanr::sample()}}
\item \code{"cmdstan-pathfinder"} for pathfinder estimation via \code{\link[cmdstanr:model-method-pathfinder]{cmdstanr::pathfinder()}}
\item \code{"cmdstan-optimize"} for optimization via \code{\link[cmdstanr:model-method-optimize]{cmdstanr::optimize()}}
\item \code{"cmdstan-laplace"} for Laplace approximation via \code{\link[cmdstanr:model-method-laplace]{cmdstanr::laplace()}}
}}

\item{...}{Additional arguments passed to the underlying estimation function (see above for details).}
}
\value{
\itemize{
\item If \code{data} is a data.frame: An mb_analysis object
\item If \code{data} is a list of data.frames: An mb_meta_analysis object
}
}
\description{
Performs parameter estimation on a single mb_model object using Stan or JAGS.

This function provides a set of arguments that are common to various underlying estimation methods.
However, some arguments are only relevant to MCMC sampling functions (e.g., \code{nchains}, \code{niters}, \code{nthin}, \code{seed}, \code{niters_warmup}).

If the model is a JAGS model, \href{https://github.com/cran/rjags}{rjags} is used for sampling under the hood.
If the model is a Stan model, either \href{https://mc-stan.org/cmdstanr/}{cmdstanr} or \href{https://github.com/stan-dev/rstan}{rstan} is used, depending on the \code{stan_engine} value. Possible options include:
\itemize{
\item \code{"rstan"} for MCMC sampling via \code{\link[rstan:stanmodel-method-sampling]{rstan::sampling()}}  (default).
\item \code{"cmdstan-mcmc"} for MCMC sampling via \code{\link[cmdstanr:model-method-sample]{cmdstanr::sample()}}
\item \code{"cmdstan-pathfinder"} for pathfinder estimation via \code{\link[cmdstanr:model-method-pathfinder]{cmdstanr::pathfinder()}}
\item \code{"cmdstan-optimize"} for optimization via \code{\link[cmdstanr:model-method-optimize]{cmdstanr::optimize()}}
\item \code{"cmdstan-laplace"} for Laplace approximation via \code{\link[cmdstanr:model-method-laplace]{cmdstanr::laplace()}}
}

For Stan models, additional arguments can be passed to the engine-specific estimation functions via the \code{...} argument.

For example, additional options in \code{\link[cmdstanr:model-method-sample]{cmdstanr::sample()}} include:
\itemize{
\item \code{adapt_delta} - Target acceptance rate (0 < adapt_delta < 1)
\item \code{max_treedepth} - Maximum tree depth for NUTS sampler
\item \code{step_size} - Initial step size for sampler
\item \code{refresh} - How often to print sampling progress
}

If the options are already being used, they will be ignored (e.g., passing \code{iter_sampling} to \code{\link[cmdstanr:model-method-sample]{cmdstanr::sample()}} with \code{stan_engine = 'cmdstan-mcmc'} will not override the iterations set via \code{niters}).
}
\examples{
\dontrun{
# Stan model with RStan (default)
analysis <- analyse(stan_model, data, nchains = 4, niters = 2000)

# Stan model with CmdStanR MCMC
analysis <- analyse(stan_model, data,
                    stan_engine = "cmdstan-mcmc",
                    nchains = 4, niters = 2000)

# JAGS model
analysis <- analyse(jags_model, data, nchains = 4, niters = 2000)

# Passing engine-specific arguments
analysis <- analyse(stan_model, data,
                    stan_engine = "cmdstan-mcmc",
                    nchains = 4, niters = 2000,
                    adapt_delta = 0.99, # cmdstanr::sample argument
                    iter_warmup = 500L) # cmdstanr::sample argument

analysis <- analyse(stan_model, data,
                    nchains = 4, niters = 2000,
                    control = list(adapt_delta = 0.95))  # rstan::sampling argument

# Multiple datasets
data_list <- list(dataset1 = data1, dataset2 = data2)
analyses <- analyse(model, data_list, nchains = 3)
}

}
\seealso{
\itemize{
\item \code{\link[=analyse.character]{analyse.character()}} for analysing a character model template
\item \code{\link[=analyse.mb_models]{analyse.mb_models()}} for analysing multiple models
}
}
