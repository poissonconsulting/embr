% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mb-code.R
\name{mb_code}
\alias{mb_code}
\alias{new_mb_code}
\title{MB Code}
\usage{
mb_code(template, stan_engine = getOption("mb.stan_engine", character(0)))

new_mb_code(x, class)
}
\arguments{
\item{template}{A string, a braced `{}` expression (unquoted or quoted),
or an object of class `"mb_code"`.}

\item{stan_engine}{A string indicating the Stan engine to use, e.g., `"cmdstanr"`.
Currently, any value other than `"cmdstanr"` will default to use `"rstan"` via `smbr` package.}

\item{x}{A string or a braced `{}` expression.}

\item{class}{The class of the new object.}
}
\value{
An object inheriting from class mb_code.
}
\description{
Identifies the type of the code and creates an object of the appropriate class.
}
\examples{
x <- mb_code(
  "#include <TMB.hpp>

template<class Type>

Type objective_function<Type>::operator() () {
DATA_VECTOR(Count);
PARAMETER(bIntercept);

int n = Count.size();

Type nll = 0.0;
for(int i = 0; i < n; i++){
  nll -= dpois(Count(i), bIntercept, true);
}
return nll;
}
"
)
class(x)
}
